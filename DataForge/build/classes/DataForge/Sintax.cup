package DataForge;

import java_cup.runtime.Symbol;

parser code
{:
    public void syntax_error(Symbol s){
        System.out.println("Error sintactico: "+s.value+" linea: "+s.left+" columna: "+s.right);
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("Error sintactico unrecovered: "+s.value+" linea: "+s.left+" columna: "+s.right);
    }
    double valor_total ;

    Variable newVar = new Variable();
:};
terminal Linea,Signo_Igual,Signo_Suma,Signo_Resta,Signo_Multiplicacion,Signo_Division, 
        Parentesis_Izq, Parentesis_Der,Corchete_Izq, Corchete_Der, Program,End,Variable,Var_Tipo,
        Array,Fun_Arit,Fun_Esta,Fun_Consola,Imprimir,Columna,Ejecutar,Tipo_Grafica,Titulo,Eje_X,
        Eje_Y,Titulo_X,Titulo_Y,Grafica_Label,Grafica_Valores,DosPuntos_Dobles,
        Punto_Coma,Dos_Puntos,Punto,Coma,Signo_Indicador,Signo_Arroba,Identificador, ERROR,Char_General,COMILLA,Numero,Signo_IndicadorR;
        


non terminal arbol INICIO_PR, CODIGO, EJECUCION,INSTRUCCION ,D_VARIABLE,D_ARREGLO,D_COMENTARIO,D_GRAFICA ,EXPRESION,TIPOEXPR,EXPRE_EST,CONTENIDO,LISTA_DATOS,
            SENTENCIA,TIPOARRAY,TEXTO,LISTA_COMENTARIO,CADENA,START_GRAPH,CONTGRAPH;

start with INICIO_PR;

// ..............INICIO Y ESTRUCTURA DEL PROGRAMA.................

INICIO_PR ::= Program:P1 CODIGO:C End:E Program:P2{:

                arbol inicio = new arbol("INICIO_PR");
                inicio.addHijo(new arbol(P1.toString()));
                inicio.addHijo(C);
                inicio.addHijo(new arbol(E.toString()));
                inicio.addHijo(new arbol(P2.toString()));
                RESULT = inicio;
            :};

CODIGO ::= EJECUCION:E  {:

                arbol codigo = new arbol("CODIGO");
                codigo.addHijo(E);
                RESULT = codigo;
            :}
            |   ;


EJECUCION::= INSTRUCCION:I {:

                arbol ejecucion = new arbol("EJECUCION");
                ejecucion.addHijo(I);
                RESULT = ejecucion;
            :}

            | EJECUCION:E INSTRUCCION:I {:

                arbol ejecucion = new arbol("EJECUCION");
                ejecucion.addHijo(E);
                ejecucion.addHijo(I);
                RESULT = ejecucion;
            :};


INSTRUCCION::= D_VARIABLE:V  {:

                arbol instruccion = new arbol("INSTRUCCION");
                instruccion.addHijo(V);
                RESULT = instruccion;
            :}

            | D_ARREGLO: A {:
            
                arbol instruccion = new arbol("INSTRUCCION");
                instruccion.addHijo(A);
                RESULT = instruccion;
            :}

            | D_COMENTARIO:C {:
            
                arbol instruccion = new arbol("INSTRUCCION");
                instruccion.addHijo(C);
                RESULT = instruccion;
            :}

            | D_GRAFICA:G  {:
            
                arbol instruccion = new arbol("INSTRUCCION");
                instruccion.addHijo(G);
                RESULT = instruccion;
            :};

// ..............VARIABLES.................

D_VARIABLE::= Variable:V Dos_Puntos:D Var_Tipo:T DosPuntos_Dobles:DD Identificador:I Signo_Indicador:S EXPRESION:EX End:E Punto_Coma:PC {:  

            arbol D_variable = new arbol("D_VARIABLE");
            D_variable.addHijo(new arbol(V.toString()));
            D_variable.addHijo(new arbol(D.toString()));
            D_variable.addHijo(new arbol(T.toString()));
            D_variable.addHijo(new arbol(DD.toString()));
            D_variable.addHijo(new arbol(I.toString()));
            D_variable.addHijo(new arbol(S.toString()));
            D_variable.addHijo(EX);
            D_variable.addHijo(new arbol(E.toString()));
            D_variable.addHijo(new arbol(PC.toString()));

  :};

EXPRESION::= TIPOEXPR ;

TIPOEXPR::= Identificador
        |Numero
        |Char_General
        |Signo_Arroba Identificador
        |Fun_Arit Parentesis_Izq EXPRESION Coma EXPRESION Parentesis_Der
        |Fun_Esta Parentesis_Izq EXPRE_EST Parentesis_Der
        ;

// ..............ARREGLOS.................

D_ARREGLO::= Array Dos_Puntos Var_Tipo DosPuntos_Dobles Signo_Arroba Identificador Signo_Indicador Corchete_Izq LISTA_DATOS Corchete_Der End Punto_Coma ;

LISTA_DATOS ::= LISTA_DATOS Coma TIPOEXPR | TIPOEXPR ;


// ..............FUNCIONES ESTADISTICAS.................

EXPRE_EST::= Parentesis_Izq CONTENIDO Parentesis_Der
            |  CONTENIDO ;

CONTENIDO::= CONTENIDO Coma TIPOEXPR
            | TIPOEXPR ;


// ..............CONSOLA.................

D_COMENTARIO::= Fun_Consola DosPuntos_Dobles LISTA_COMENTARIO ;
LISTA_COMENTARIO::= Imprimir Signo_Igual SENTENCIA End Punto_Coma | Columna Signo_Igual CADENA Signo_IndicadorR TIPOARRAY End Punto_Coma;

SENTENCIA::= SENTENCIA Coma TEXTO
            | TEXTO ;

TEXTO::= TIPOEXPR ;

CADENA::= Char_General | Identificador ;

TIPOARRAY::= LISTA_DATOS | Corchete_Izq LISTA_DATOS Corchete_Der ;


// ..............GRAFICAS.................

D_GRAFICA::= Tipo_Grafica Parentesis_Izq CONTGRAPH Ejecutar Tipo_Grafica End Punto_Coma Parentesis_Der End Punto_Coma;



CONTGRAPH::=
            Titulo DosPuntos_Dobles Var_Tipo Signo_Igual Char_General:title End Punto_Coma
            Eje_X DosPuntos_Dobles Var_Tipo Signo_Igual Corchete_Izq LISTA_DATOS:contEjx Corchete_Der  End Punto_Coma
            Eje_Y DosPuntos_Dobles Var_Tipo Signo_Igual Corchete_Izq LISTA_DATOS:contEjy Corchete_Der  End Punto_Coma
            Titulo_X DosPuntos_Dobles Var_Tipo Signo_Igual Char_General:tituloX End Punto_Coma
            Titulo_Y DosPuntos_Dobles Var_Tipo Signo_Igual Char_General:tituloY End Punto_Coma 

            | Grafica_Label DosPuntos_Dobles Var_Tipo Signo_Igual Corchete_Izq LISTA_DATOS:labelPie Corchete_Der  End Punto_Coma
              Grafica_Valores DosPuntos_Dobles Var_Tipo Signo_Igual Corchete_Izq LISTA_DATOS:valuesPie Corchete_Der  End Punto_Coma
              Titulo DosPuntos_Dobles Var_Tipo Signo_Igual Char_General:titlePie End Punto_Coma

            | Titulo DosPuntos_Dobles Var_Tipo Signo_Igual Char_General:titleHis End Punto_Coma
              Grafica_Valores DosPuntos_Dobles Var_Tipo Signo_Igual Corchete_Izq LISTA_DATOS:valuesHist Corchete_Der  End Punto_Coma;