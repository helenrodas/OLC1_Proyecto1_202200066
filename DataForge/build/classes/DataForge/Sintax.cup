package DataForge;

import java_cup.runtime.Symbol;

parser code
{:
    public void syntax_error(Symbol s){
        System.out.println("Error sintactico: "+s.value+" linea: "+s.left+" columna: "+s.right);
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("Error sintactico unrecovered: "+s.value+" linea: "+s.left+" columna: "+s.right);
    }
:};
terminal Linea,Signo_Igual,Signo_Suma,Signo_Resta,Signo_Multiplicacion,Signo_Division, 
        Parentesis_Izq, Parentesis_Der,Corchete_Izq, Corchete_Der, Program,End,Variable,Var_Tipo,
        Array,Fun_Arit,Fun_Esta,Fun_Consola,Imprimir,Columna,Ejecutar,Tipo_Grafica,Titulo,Eje_X,
        Eje_Y,Titulo_X,Titulo_Y,Grafica_Label,Grafica_Valores,DosPuntos_Dobles,
        Punto_Coma,Dos_Puntos,Punto,Coma,Signo_Indicador,Signo_Arroba,Identificador,Char_General,COMILLA,Numero,Signo_IndicadorR;
        


non terminal arbol INICIO_PR, CODIGO, EJECUCION,INSTRUCCION ,D_VARIABLE,D_ARREGLO,D_COMENTARIO,D_GRAFICA ,TIPOEXPR,EXPRE_EST,LISTA_DATOS,
            TIPOARRAY,LISTA_COMENTARIO,START_GRAPH,CONTGRAPH,ATRIBUTOS;

start with INICIO_PR;

// ..............INICIO Y ESTRUCTURA DEL PROGRAMA.................

INICIO_PR ::= Program:P1 CODIGO:C End:E Program:P2{:

                arbol inicio = new arbol("INICIO_PR");
                inicio.addHijo(new arbol(P1.toString()));
                inicio.addHijo(C);
                inicio.addHijo(new arbol(E.toString()));
                inicio.addHijo(new arbol(P2.toString()));
                RESULT = inicio;
            :};

CODIGO ::= EJECUCION:E  {:

                arbol codigo = new arbol("CODIGO");
                codigo.addHijo(E);
                RESULT = codigo;
            :}
            |   ;

EJECUCION::= INSTRUCCION:I {:

                arbol ejecucion = new arbol("EJECUCION");
                ejecucion.addHijo(I);
                RESULT = ejecucion;
            :}

            | EJECUCION:E INSTRUCCION:I {:

                arbol ejecucion = new arbol("EJECUCION");
                ejecucion.addHijo(E);
                ejecucion.addHijo(I);
                RESULT = ejecucion;
            :};

INSTRUCCION::= D_VARIABLE:V  {:

                arbol instruccion = new arbol("INSTRUCCION");
                instruccion.addHijo(V);
                RESULT = instruccion;
            :}

            | D_ARREGLO: A {:
            
                arbol instruccion = new arbol("INSTRUCCION");
                instruccion.addHijo(A);
                RESULT = instruccion;
            :}

            | D_COMENTARIO:C {:
            
                arbol instruccion = new arbol("INSTRUCCION");
                instruccion.addHijo(C);
                RESULT = instruccion;
            :}

            | D_GRAFICA:G  {:
            
                arbol instruccion = new arbol("INSTRUCCION");
                instruccion.addHijo(G);
                RESULT = instruccion;
            :};

// ..............VARIABLES.................

D_VARIABLE::= Variable:V Dos_Puntos:D Var_Tipo:T DosPuntos_Dobles:DD Identificador:I Signo_Indicador:S TIPOEXPR:EX End:E Punto_Coma:PC {:  

            arbol D_variable = new arbol("D_VARIABLE");
            D_variable.addHijo(new arbol(V.toString()));
            D_variable.addHijo(new arbol(D.toString()));
            D_variable.addHijo(new arbol(T.toString()));
            D_variable.addHijo(new arbol(DD.toString()));
            D_variable.addHijo(new arbol(I.toString()));
            D_variable.addHijo(new arbol(S.toString()));
            D_variable.addHijo(EX);
            D_variable.addHijo(new arbol(E.toString()));
            D_variable.addHijo(new arbol(PC.toString()));
            RESULT = D_variable;
  :};

TIPOEXPR::= Identificador:I {:

            arbol tipoExpr = new arbol("TIPOEXPR");
            tipoExpr.addHijo(new arbol(I.toString()));
            RESULT = tipoExpr;
            :}

        |Numero:N {:

            arbol tipoExpr = new arbol("TIPOEXPR");
            tipoExpr.addHijo(new arbol(N.toString()));
            RESULT = tipoExpr;
            :}

        |Char_General: CG {:

            arbol tipoExpr = new arbol("TIPOEXPR");
            tipoExpr.addHijo(new arbol(CG.toString()));
            RESULT = tipoExpr;
            :}

        |Signo_Arroba:A Identificador:I2 {:

            arbol tipoExpr = new arbol("TIPOEXPR");
            tipoExpr.addHijo(new arbol(A.toString()));
            tipoExpr.addHijo(new arbol(I2.toString()));
            RESULT = tipoExpr;
            :}

        |Fun_Arit:FA Parentesis_Izq:PI TIPOEXPR:E1 Coma:C TIPOEXPR:E2 Parentesis_Der:PD {:

            arbol tipoExpr = new arbol("TIPOEXPR");
            tipoExpr.addHijo(new arbol(FA.toString()));
            tipoExpr.addHijo(new arbol(PI.toString()));
            tipoExpr.addHijo(E1);
            tipoExpr.addHijo(new arbol(C.toString()));
            tipoExpr.addHijo(E2);
            tipoExpr.addHijo(new arbol(PD.toString()));
            RESULT = tipoExpr;
            :}

        |Fun_Esta:FE Parentesis_Izq:PI EXPRE_EST:EE Parentesis_Der:PD{:

            arbol tipoExpr = new arbol("TIPOEXPR");
            tipoExpr.addHijo(new arbol(FE.toString()));
            tipoExpr.addHijo(new arbol(PI.toString()));
            tipoExpr.addHijo(EE);
            tipoExpr.addHijo(new arbol(PD.toString()));
            RESULT = tipoExpr;
            :};

// ..............ARREGLOS.................

D_ARREGLO::= Array:A Dos_Puntos:DP Var_Tipo:V DosPuntos_Dobles:DD Signo_Arroba:SA Identificador:I Signo_Indicador:S Corchete_Izq:CI LISTA_DATOS:LD Corchete_Der:CD End:E Punto_Coma:PC {:

            arbol D_arreglo = new arbol("D_ARREGLO");
            D_arreglo.addHijo(new arbol(A.toString()));
            D_arreglo.addHijo(new arbol(DP.toString()));
            D_arreglo.addHijo(new arbol(V.toString()));
            D_arreglo.addHijo(new arbol(DD.toString()));
            D_arreglo.addHijo(new arbol(SA.toString()));
            D_arreglo.addHijo(new arbol(I.toString()));
            D_arreglo.addHijo(new arbol(S.toString()));
            D_arreglo.addHijo(new arbol(CI.toString()));
            D_arreglo.addHijo(LD);
            D_arreglo.addHijo(new arbol(CD.toString()));
            D_arreglo.addHijo(new arbol(E.toString()));
            D_arreglo.addHijo(new arbol(PC.toString()));
            RESULT = D_arreglo;
            :};

LISTA_DATOS ::= LISTA_DATOS:LD Coma:C TIPOEXPR:TE {:
                
                arbol ListaDatos = new arbol("LISTA_DATOS");
                ListaDatos.addHijo(LD);
                ListaDatos.addHijo(new arbol(C.toString()));
                ListaDatos.addHijo(TE);
                RESULT = ListaDatos;    
                :}
                
            | TIPOEXPR:TE {:
                arbol ListaDatos = new arbol("LISTA_DATOS");
                ListaDatos.addHijo(TE);
                RESULT = ListaDatos;   
                :};

// ..............FUNCIONES ESTADISTICAS.................

EXPRE_EST::= Corchete_Izq:PI LISTA_DATOS:LD Corchete_Der: PD {:
            
            arbol ExpreEst = new arbol("EXPRE_EST");
            ExpreEst.addHijo(new arbol(PI.toString()));
            ExpreEst.addHijo(LD);
            ExpreEst.addHijo(new arbol(PD.toString()));
            RESULT = ExpreEst;
            :}
            |  LISTA_DATOS:LD {:
            arbol ExpreEst = new arbol("EXPRE_EST");
            ExpreEst.addHijo(LD);
            RESULT = ExpreEst;
            :};

// ..............CONSOLA.................

D_COMENTARIO::= Fun_Consola:FC DosPuntos_Dobles LISTA_COMENTARIO:LC {:

            arbol D_comentario = new arbol("D_COMENTARIO");
            D_comentario.addHijo(new arbol(FC.toString()));
            D_comentario.addHijo(LC);
            RESULT = D_comentario;
            :};

LISTA_COMENTARIO::= Imprimir:IM Signo_Igual:SI LISTA_DATOS:LD End:E Punto_Coma:PC {:
                    
                arbol listaComentario = new arbol("LISTA_COMENTARIO");
                listaComentario.addHijo(new arbol(IM.toString()));
                listaComentario.addHijo(new arbol(SI.toString()));
                listaComentario.addHijo(LD);
                listaComentario.addHijo(new arbol(E.toString()));
                listaComentario.addHijo(new arbol(PC.toString()));
                RESULT = listaComentario;
                :}

            | Columna:CL Signo_Igual:SI LISTA_DATOS:LD Signo_IndicadorR:SIR  TIPOARRAY:TA End:E Punto_Coma:PC {:

                arbol listaComentario = new arbol("LISTA_COMENTARIO");
                listaComentario.addHijo(new arbol(CL.toString()));
                listaComentario.addHijo(new arbol(SI.toString()));
                listaComentario.addHijo(LD);
                listaComentario.addHijo(new arbol(SIR.toString()));
                listaComentario.addHijo(TA);
                listaComentario.addHijo(new arbol(E.toString()));
                listaComentario.addHijo(new arbol(PC.toString()));
                RESULT = listaComentario;
                :};

TIPOARRAY::= LISTA_DATOS: LD {:

            arbol tipoArray = new arbol("TIPOARRAY");
            tipoArray.addHijo(LD);
            RESULT = tipoArray; 
            :}

        | Corchete_Izq:CI LISTA_DATOS:LD Corchete_Der:CD {:

            arbol tipoArray = new arbol("TIPOARRAY");
            tipoArray.addHijo(new arbol(CI.toString()));
            tipoArray.addHijo(LD);
            tipoArray.addHijo(new arbol(CD.toString()));
            RESULT = tipoArray; 
            :};


// ..............GRAFICAS.................

D_GRAFICA::= Tipo_Grafica:TG1 Parentesis_Izq:PI CONTGRAPH:CG Ejecutar:EJ Tipo_Grafica:TG2 End:E1 Punto_Coma:PC1 Parentesis_Der:PD End:E2 Punto_Coma:PC2 {:

            arbol D_grafica = new arbol("D_GRAFICA");
            D_grafica.addHijo(new arbol(TG1.toString()));
            D_grafica.addHijo(new arbol(PI.toString()));
            D_grafica.addHijo(CG);
            D_grafica.addHijo(new arbol(EJ.toString()));
            D_grafica.addHijo(new arbol(TG2.toString()));
            D_grafica.addHijo(new arbol(E1.toString()));
            D_grafica.addHijo(new arbol(PC1.toString()));
            D_grafica.addHijo(new arbol(PD.toString()));
            D_grafica.addHijo(new arbol(E2.toString()));
            D_grafica.addHijo(new arbol(PC2.toString()));
            RESULT = D_grafica;
            :};

CONTGRAPH::= CONTGRAPH:CONT ATRIBUTOS:ATRIB {:

            arbol contgraph = new arbol("CONTGRAPH");
            contgraph.addHijo(CONT);
            contgraph.addHijo(ATRIB);
            RESULT = contgraph;     
            :}
        | ATRIBUTOS:ATRIB {:

            arbol contgraph = new arbol("CONTGRAPH");
            contgraph.addHijo(ATRIB);
            RESULT = contgraph;
            :};
ATRIBUTOS::= Titulo:T DosPuntos_Dobles Var_Tipo:V1 Signo_Igual Char_General:CT End Punto_Coma {:

            arbol atributos = new arbol("ATRIBUTOS");
            atributos.addHijo(new arbol(T.toString()));
            atributos.addHijo(new arbol(V1.toString()));
            atributos.addHijo(new arbol(CT.toString()));
            RESULT = atributos;
            :}
                 
        | Eje_X:EJX DosPuntos_Dobles Var_Tipo:V2 Signo_Igual Corchete_Izq LISTA_DATOS:LISTAEJX Corchete_Der  End Punto_Coma{:
        
                arbol atributos = new arbol("ATRIBUTOS");
                atributos.addHijo(new arbol(EJX.toString()));
                atributos.addHijo(new arbol(V2.toString()));
                atributos.addHijo(LISTAEJX);
                RESULT = atributos;
                :}

        | Eje_Y:EJY DosPuntos_Dobles Var_Tipo:V3 Signo_Igual Corchete_Izq LISTA_DATOS:LISTAEJY Corchete_Der  End Punto_Coma{:

                arbol atributos = new arbol("ATRIBUTOS");
                atributos.addHijo(new arbol(EJY.toString()));
                atributos.addHijo(new arbol(V3.toString()));
                atributos.addHijo(LISTAEJY);
                RESULT = atributos;
                :}
        | Titulo_X:TX DosPuntos_Dobles Var_Tipo:V4 Signo_Igual Char_General:CHARX End Punto_Coma{:
                
                arbol atributos = new arbol("ATRIBUTOS");
                atributos.addHijo(new arbol(TX.toString()));
                atributos.addHijo(new arbol(V4.toString()));
                atributos.addHijo(new arbol(CHARX.toString()));
                RESULT = atributos;
                :}
        | Titulo_Y:TY DosPuntos_Dobles Var_Tipo:V5 Signo_Igual Char_General:CHARY End Punto_Coma {:
                
                arbol atributos = new arbol("ATRIBUTOS");
                atributos.addHijo(new arbol(TY.toString()));
                atributos.addHijo(new arbol(V5.toString()));
                atributos.addHijo(new arbol(CHARY.toString()));
                RESULT = atributos;
                :}
        | Grafica_Label:GL DosPuntos_Dobles Var_Tipo:V1 Signo_Igual Corchete_Izq LISTA_DATOS:LD Corchete_Der  End Punto_Coma{:
                
                arbol atributos = new arbol("ATRIBUTOS");
                atributos.addHijo(new arbol(GL.toString()));
                atributos.addHijo(new arbol(V1.toString()));
                atributos.addHijo(LD);
                RESULT = atributos;
                :}
        | Grafica_Valores:GV DosPuntos_Dobles Var_Tipo:V2 Signo_Igual Corchete_Izq LISTA_DATOS:VP Corchete_Der End Punto_Coma{:

                arbol atributos = new arbol("ATRIBUTOS");
                atributos.addHijo(new arbol(GV.toString()));
                atributos.addHijo(new arbol(V2.toString()));
                atributos.addHijo(VP);
                RESULT = atributos;
                :};
